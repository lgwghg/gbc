<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.webside.goods.mapper.IGoodsStockMapper">
	<!--mybatis ehcache缓存配置,以下两个<cache>标签二选一,第一个可以输出日志,第二个不输出日志 -->
	<cache eviction="LRU" flushInterval="100000" type="org.mybatis.caches.ehcache.LoggingEhcache"/> 

	<!-- 将实体与字段对应关系 -->
	<resultMap id="resultMap" type="com.webside.goods.model.GoodsStock">
		<id column="id" property="id"/> <!-- 唯一标识-->
		<result column="goods_id" property="goodsId"/> <!-- 所属商品-->
		<result column="goods_name" property="goodsName"/> <!-- 所属商品-->
		<result column="card_no" property="cardNo"/> <!-- 卡号-->
		<result column="card_pass" property="cardPass"/> <!-- 卡密-->
		<result column="goods_no" property="goodsNo"/> <!-- 编号-->
		<result column="effective_time" property="effectiveTime"/> <!-- 有效期-->
		<result column="status" property="status"/> <!-- 状态 1: 未兑换，2：已兑换 , 3：已使用-->
	</resultMap>
	
	<!-- t_goods_stock字段列表-->
	<sql id="columnList">
		<trim suffixOverrides=",">
			t.id, <!-- 唯一标识-->
			t.goods_id, <!-- 所属商品-->
			g.goods_name, <!-- 所属商品-->
			t.card_no, <!-- 卡号-->
			t.card_pass, <!-- 卡密-->
			t.goods_no, <!-- 编号-->
			t.effective_time, <!-- 有效期-->
			t.status, <!-- 状态 1: 未兑换，2：已兑换 , 3：已使用-->
		</trim>
	</sql>
	
	<!-- 查询t_goods_stock分页 -->
	<select id="queryListByPage" parameterType="map" resultMap="resultMap" flushCache="false" useCache="true">
		select  
			<include refid="columnList"/>
		from t_goods_stock t
		LEFT JOIN t_goods g on g.id = t.goods_id
		<trim prefix="WHERE" prefixOverrides="AND | OR">  
			<if test="goodsId != null and goodsId != ''">
				AND t.goods_id=#{goodsId}
			</if>
			<if test="goodsName != null and goodsName != ''">
				AND g.goods_name like concat('%',#{goodsName},'%')
			</if>
			<if test="cardNo != null and cardNo != ''">
				AND t.card_no like concat('%',#{cardNo},'%')
			</if>
			<if test="cardPass != null and cardPass != ''">
				AND t.card_pass=#{cardPass}
			</if>
			<if test="goodsNo != null and goodsNo != ''">
				AND t.goods_no like concat('%',#{goodsNo},'%')
			</if>
			<if test="effectiveTime != null and effectiveTime != ''">
				AND t.effective_time=#{effectiveTime}
			</if>
			<if test="status != null and status != ''">
				AND t.status=#{status}
			</if>
		</trim>
	</select>
	
	<select id="findListByParams" parameterType="map" resultType="com.webside.goods.model.vo.GoodsStockVo" flushCache="false" useCache="true">
		select t.*,g.goods_name,
		g.goods_img as "goodsImg",
		g.goods_gold as "goodsGold",
		g.desc as "goodsDesc",
		g.type as "goodsType",
		g.status as "goodsStatus",
		t.id as "stockId",
		t.status as "stockStatus"
		from t_goods_stock t
		LEFT JOIN t_goods g on g.id = t.goods_id
		<trim prefix="WHERE" prefixOverrides="AND | OR">  
			<if test="goodsId != null and goodsId != ''">
				AND t.goods_id=#{goodsId}
			</if>
			<if test="goodsName != null and goodsName != ''">
				AND t.goods_name like concat('%',#{goodsName},'%')
			</if>
			<if test="cardNo != null and cardNo != ''">
				AND t.card_no like concat('%',#{cardNo},'%')
			</if>
			<if test="cardPass != null and cardPass != ''">
				AND t.card_pass=#{cardPass}
			</if>
			<if test="goodsNo != null and goodsNo != ''">
				AND t.goods_no like concat('%',#{goodsNo},'%')
			</if>
			<if test="effectiveTime != null and effectiveTime != ''">
				AND t.effective_time=#{effectiveTime}
			</if>
			<if test="status != null and status != ''">
				AND t.status=#{status}
			</if>
			<if test="stockIds != null">
				AND t.id in
				<foreach collection="stockIds" item="id" open="(" separator="," close=")">
			    	#{id}  
			    </foreach>
			</if>
		</trim>
	</select>
	
	<!-- 新增t_goods_stock -->
	<insert id="insert" parameterType="com.webside.goods.model.GoodsStock">
		insert into t_goods_stock
		<trim prefix="(" suffix=")" suffixOverrides=",">
		<if test="id != null">id,</if><!-- 唯一主键-->
		<if test="goodsId != null">goods_id,</if><!-- 所属商品-->
		<if test="cardNo != null">card_no,</if><!-- 卡号-->
		<if test="cardPass != null">card_pass,</if><!-- 卡密-->
		<if test="goodsNo != null">goods_no,</if><!-- 编号-->
		<if test="effectiveTime != null">effective_time,</if><!-- 有效期-->
		<if test="status != null">status,</if><!-- 状态 1: 未兑换，2：已兑换 , 3：已使用-->
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
		<if test="id != null">#{id},</if><!-- 唯一主键-->
		<if test="goodsId != null">#{goodsId},</if><!-- 所属商品-->
		<if test="cardNo != null">#{cardNo},</if><!-- 卡号-->
		<if test="cardPass != null">#{cardPass},</if><!-- 卡密-->
		<if test="goodsNo != null">#{goodsNo},</if><!-- 编号-->
		<if test="effectiveTime != null">#{effectiveTime},</if><!-- 有效期-->
		<if test="status != null">#{status},</if><!-- 状态 1: 未兑换，2：已兑换 , 3：已使用-->
		</trim>
	</insert>
	
	<!-- 根据ID查询t_goods_stock -->
	<select id="findById" resultMap="resultMap" parameterType="String" flushCache="false" useCache="true">
		select  
			<include refid="columnList"/>
		from t_goods_stock t
		LEFT JOIN t_goods g on g.id = t.goods_id
		where t.id = #{id}
	</select>
	
	<!-- 更新t_goods_stock -->
	<update id="update" parameterType="com.webside.goods.model.GoodsStock" flushCache="true">
		update t_goods_stock
		<set>
			<trim suffixOverrides=",">
				<if test="goodsId != null">goods_id=#{goodsId},</if><!-- 所属商品-->
				<if test="cardNo != null">card_no=#{cardNo},</if><!-- 卡号-->
				<if test="cardPass != null">card_pass=#{cardPass},</if><!-- 卡密-->
				<if test="goodsNo != null">goods_no=#{goodsNo},</if><!-- 编号-->
				<if test="effectiveTime != null">effective_time=#{effectiveTime},</if><!-- 有效期-->
				<if test="status != null">status=#{status},</if><!-- 状态 1: 未兑换，2：已兑换 , 3：已使用-->
			</trim>
		</set>
		where id = #{id}
	</update>
	
	<!-- 根据ID列表删除t_goods_stock -->
	<delete id="deleteBatchById" parameterType="list" flushCache="true">
		delete from t_goods_stock  
		where id in
		<foreach collection="list" item = "id" open="(" separator="," close=")">
	    	#{id}  
	    </foreach>
	</delete>
	
	<!-- 根据ID删除t_goods_stock -->
	<delete id="deleteById" parameterType="String" flushCache="true">
		delete from t_goods_stock 
		where id = #{id}
	</delete>
	
	<!-- 验证卡号 -->
	<select id="checkCardNo" resultType="int" parameterType="map" flushCache="true" useCache="true">
		select count(1) from t_goods_stock t
		<where>
			AND lower(t.card_no) = lower(#{cardNo})
			<if test="id != null and id != ''">
				AND t.id != #{id}
			</if>
		</where>
	</select>
	
	<!-- 验证编号 -->
	<select id="checkGoodsNo" resultType="int" parameterType="map" flushCache="true" useCache="true">
		select count(1) from t_goods_stock t
		<where>
			AND lower(t.goods_no) = lower(#{goodsNo})
			AND t.goods_id = #{goodsId}
			<if test="id != null and id != ''">
				AND t.id != #{id}
			</if>
		</where>
	</select>
	
	<select id="findByGoodsId" resultMap="resultMap" parameterType="map" flushCache="true" useCache="false">
		select t.*,g.goods_name from t_goods_stock t 
		left join t_goods g on g.id = t.goods_id
		where 1=1
		and t.GOODS_ID = #{goodsId}
		and t.`STATUS` = 1
		AND IFNULL(t.EFFECTIVE_TIME, #{currentTime}) >= #{currentTime}
		ORDER BY t.EFFECTIVE_TIME
		limit 0,1
	</select>
	
	<update id="updateStockStatus" parameterType="map" flushCache="true">
		UPDATE t_goods_stock t,(
			select gs.ID, CASE WHEN IFNULL(gs.EFFECTIVE_TIME, #{currentTime}) >= #{currentTime} THEN 1 ELSE 3 END `STATUS`  from t_goods_stock gs 
			LEFT JOIN t_goods g on g.ID = gs.GOODS_ID
			where g.TYPE = 2
			AND gs.`STATUS` in(1,3)
		) tt SET t.`STATUS` = tt.`STATUS` where t.ID = tt.ID
	</update>
</mapper>