<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.webside.system.dict.mapper.DictMapper">
	<!--mybatis ehcache缓存配置,以下两个<cache>标签二选一,第一个可以输出日志,第二个不输出日志 -->
	<cache eviction="LRU" flushInterval="100000" type="org.mybatis.caches.ehcache.LoggingEhcache"/> 
	<!-- <cache type="org.mybatis.caches.ehcache.EhcacheCache"/> -->

	<sql id="dictAttributes">
		d.id AS id ,
		d.value AS value,
		d.label AS label,
		d.type AS type,
		d.description AS description,
		d.sort AS sort, 
		d.parent_id AS parent_id,
		d.del_flag AS delFlag,
		d.label_class AS "labelClass",
		d.create_by "createBy.id",
		u.NICK_NAME "createBy.nickName",
		d.update_by "updateBy.id",
		u1.NICK_NAME "updateBy.nickName",
		d.create_date AS createDate,
		d.update_date AS updateDate
	</sql>
	
	<sql id="dictInfo">
		d.id AS id ,
		d.value AS value,
		d.label AS label,
		d.type AS type,
		d.description AS description,
		d.sort AS sort, 
		d.parent_id AS parent_id,
		d.label_class AS labelClass,
		d.del_flag AS delFlag
	</sql>
	
	<sql id="dictJoins">
		INNER JOIN TB_USER u  ON d.create_by = u.u_id
		LEFT JOIN TB_USER u1 ON  d.update_by = u1.u_id
	</sql>
	
	<select id="queryListByPage" parameterType="map" resultType="com.webside.system.dict.model.Dict" flushCache="false" useCache="true">
		<!-- 
			偏移offset较小的时候，直接使用limit较优；
			偏移offset较大的时候，使用下面子查询的方式较优；
			具体可以根据业务情况选择 
		-->
		<!-- 
		select <include refid="userAttributes" /> from tb_user Where u_id >=(
		select u_id from tb_user order by u_id limit ${start},1
		) limit ${pageNumber}
		 -->
		SELECT 
			<include refid="dictAttributes"/>
		FROM  SYS_DICT d 
		<include refid="dictJoins"/>
		<where>
			<if test="description != null and description != ''">
				d.description LIKE CONCAT('%', #{description}, '%') or d.type LIKE CONCAT('%', #{description}, '%')
			</if>
		</where>
		
	</select>
	<select id="queryList" parameterType="map" resultType="com.webside.system.dict.model.Dict" flushCache="false" useCache="true">
		SELECT 
			<include refid="dictInfo"/>
		FROM  SYS_DICT d 
		<where>
			<if test="delFlag != null and delFlag != ''">
				d.del_flag = #{delFlag}
			</if>
		</where>
		order by sort
	</select>
	
	<insert id="insert" parameterType="com.webside.system.dict.model.Dict" keyProperty="id" flushCache="true">
		insert into SYS_DICT (
			id,
			value,
			label,
			type,
			description,
			sort,
			parent_id,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag,
			label_class
			)   
		values (
			#{id},
			#{value},
			#{label},
			#{type},
			#{description},
			#{sort},
			#{parentId},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag},
			#{labelClass}
			)  
	</insert>
	
	<select id="findById" parameterType="string" resultType="com.webside.system.dict.model.Dict" flushCache="false" useCache="true">
		select
			<include refid="dictAttributes"/>
		from
			SYS_DICT d 
		<include refid="dictJoins"/>
		where
			d.id = #{id}
	</select>
	
	<update id="update" parameterType="com.webside.system.dict.model.Dict" flushCache="true">
		update SYS_DICT
		<set>
				type = #{type},
				value = #{value},
				label = #{label},
				sort = #{sort},
				update_by = #{updateBy.id},
				update_date = #{updateDate},
			<if test="description != null and description != ''">
				description = #{description},
			</if>
			<if test="parentId != null and parentId != ''">
				parent_id = #{parentId},
			</if>
			<if test="labelClass != null and labelClass != ''">
				label_class = #{labelClass},
			</if>
			del_flag = #{delFlag}
		</set>
		where id = #{id}
	</update>
	
	<select id="getDict_Type" parameterType="string" resultType="com.webside.system.dict.model.Dict" flushCache="false" useCache="true">
		SELECT 
			<include refid="dictInfo"/>
		FROM  SYS_DICT d 
		WHERE
			d.type = #{type}
		AND
			D.del_flag = #{isDelete}
	</select>
</mapper>